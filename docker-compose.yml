version: "3.8"

services:
  postgres:
    image: postgres:16-alpine
    container_name: rbac-postgres
    environment:
      POSTGRES_USER: rbac_user
      POSTGRES_PASSWORD: rbac_password
      POSTGRES_DB: rbac_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rbac-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rbac_user -d rbac_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: rbac-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rbac-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: rbac-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - rbac-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: rbac-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - rbac-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: rbac-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - rbac-network

  rbac-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: rbac-service
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "4000:4000"
      - "50051:50051"
    environment:
      NODE_ENV: production
      PORT: 4000
      DATABASE_URL: postgresql://rbac_user:rbac_password@postgres:5432/rbac_db?schema=public
      GRPC_PORT: 50051
      JWT_SECRET: your-super-secret-jwt-key-change-this
      JWT_REFRESH_SECRET: your-super-secret-refresh-key-change-this
      REDIS_HOST: redis
      REDIS_PORT: 6379
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
      KAFKA_BROKERS: kafka:9092
      ENABLE_GRAPHQL: "true"
      ENABLE_REST: "true"
      ENABLE_GRPC: "true"
      ENABLE_MESSAGING: "true"
    networks:
      - rbac-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  rabbitmq_data:

networks:
  rbac-network:
    driver: bridge
